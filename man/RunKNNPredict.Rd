% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SCP-cell_annotation.R
\name{RunKNNPredict}
\alias{RunKNNPredict}
\title{RunKNNPredict}
\usage{
RunKNNPredict(
  srt_query,
  srt_ref = NULL,
  bulk_ref = NULL,
  query_group = NULL,
  ref_group = NULL,
  query_assay = NULL,
  ref_assay = NULL,
  query_reduction = NULL,
  ref_reduction = NULL,
  query_dims = 1:30,
  ref_dims = 1:30,
  query_collapsing = !is.null(query_group),
  ref_collapsing = TRUE,
  return_full_distance_matrix = FALSE,
  features = NULL,
  features_type = c("HVF", "DE"),
  feature_source = "both",
  nfeatures = 2000,
  DEtest_param = list(max.cells.per.ident = 200, test.use = "wilcox"),
  DE_threshold = "p_val_adj < 0.05",
  nn_method = NULL,
  distance_metric = "cosine",
  k = 30,
  filter_lowfreq = 0,
  prefix = "KNNPredict"
)
}
\arguments{
\item{srt_query}{An object of class Seurat to be annotated with cell types.}

\item{srt_ref}{An object of class Seurat storing the reference cells.}

\item{bulk_ref}{A cell atlas matrix, where cell types are represented by columns and genes are represented by rows, for example, SCPNext::ref_scHCL. Either `srt_ref` or `bulk_ref` must be provided.}

\item{query_group}{A character vector specifying the column name in the `srt_query` metadata that represents the cell grouping.}

\item{ref_group}{A character vector specifying the column name in the `srt_ref` metadata that represents the cell grouping.}

\item{query_assay}{A character vector specifying the assay to be used for the query data. Defaults to the default assay of the `srt_query` object.}

\item{ref_assay}{A character vector specifying the assay to be used for the reference data. Defaults to the default assay of the `srt_ref` object.}

\item{query_reduction}{A character vector specifying the dimensionality reduction method used for the query data. If NULL, the function will use the default reduction method specified in the `srt_query` object.}

\item{ref_reduction}{A character vector specifying the dimensionality reduction method used for the reference data. If NULL, the function will use the default reduction method specified in the `srt_ref` object.}

\item{query_dims}{A numeric vector specifying the dimensions to be used for the query data. Defaults to the first 30 dimensions.}

\item{ref_dims}{A numeric vector specifying the dimensions to be used for the reference data. Defaults to the first 30 dimensions.}

\item{query_collapsing}{A boolean value indicating whether the query data should be collapsed to group-level average expression values. If TRUE, the function will calculate the average expression values for each group in the query data and the annotation will be performed separately for each group. Otherwise it will use the raw expression values for each cell.}

\item{ref_collapsing}{A boolean value indicating whether the reference data should be collapsed to group-level average expression values. If TRUE, the function will calculate the average expression values for each group in the reference data and the annotation will be performed separately for each group. Otherwise it will use the raw expression values for each cell.}

\item{return_full_distance_matrix}{A boolean value indicating whether the full distance matrix should be returned. If TRUE, the function will return the distance matrix used for the KNN prediction, otherwise it will only return the annotated cell types.}

\item{features}{A character vector specifying the features (genes) to be used for the KNN prediction. If NULL, all the features in the query and reference data will be used.}

\item{features_type}{A character vector specifying the type of features to be used for the KNN prediction. Must be one of "HVF" (highly variable features) or "DE" (differentially expressed features). Defaults to "HVF".}

\item{feature_source}{A character vector specifying the source of the features to be used for the KNN prediction. Must be one of "both", "query", or "ref". Defaults to "both".}

\item{nfeatures}{An integer specifying the maximum number of features to be used for the KNN prediction. Defaults to 2000.}

\item{DEtest_param}{A list of parameters to be passed to the differential expression test function if `features_type` is set to "DE". Defaults to `list(max.cells.per.ident = 200, test.use = "wilcox")`.}

\item{DE_threshold}{Threshold used to filter the DE features. Default is "p_val < 0.05". If using "roc" test, \code{DE_threshold} should be needs to be reassigned. e.g. "power > 0.5".}

\item{nn_method}{A character vector specifying the method to be used for finding nearest neighbors. Must be one of "raw", "rann", or "annoy". Defaults to "raw".}

\item{distance_metric}{A character vector specifying the distance metric to be used for calculating similarity between cells. Must be one of "cosine", "euclidean", "manhattan", or "hamming". Defaults to "cosine".}

\item{k}{An integer specifying the number of nearest neighbors to be considered for the KNN prediction. Defaults to 30.}

\item{filter_lowfreq}{An integer specifying the threshold for filtering low-frequency cell types from the predicted results. Cell types with a frequency lower than `filter_lowfreq` will be labelled as "unreliable". Defaults to 0, which means no filtering will be performed.}

\item{prefix}{A character vector specifying the prefix to be added to the resulting annotations. Defaults to "KNNPredict".}
}
\description{
This function performs KNN prediction to annotate cell types based on reference scRNA-seq or bulk RNA-seq data.
}
\examples{
# Annotate cells using bulk RNA-seq data
data("pancreas_sub")
data("ref_scMCA")
pancreas_sub <- Standard_SCP(pancreas_sub)
pancreas_sub <- RunKNNPredict(srt_query = pancreas_sub, bulk_ref = ref_scMCA)
CellDimPlot(pancreas_sub, group.by = "KNNPredict_classification", label = TRUE)

# Removal of low credible cell types from the predicted results
pancreas_sub <- RunKNNPredict(srt_query = pancreas_sub, bulk_ref = ref_scMCA, filter_lowfreq = 30)
CellDimPlot(pancreas_sub, group.by = "KNNPredict_classification", label = TRUE)

# Annotate clusters using bulk RNA-seq data
pancreas_sub <- RunKNNPredict(srt_query = pancreas_sub, query_group = "SubCellType", bulk_ref = ref_scMCA)
CellDimPlot(pancreas_sub, group.by = "KNNPredict_classification", label = TRUE)

# Annotate using single cell RNA-seq data
data("panc8_sub")
# Simply convert genes from human to mouse and preprocess the data
genenames <- make.unique(capitalize(rownames(panc8_sub), force_tolower = TRUE))
panc8_sub <- RenameFeatures(panc8_sub, newnames = genenames)
panc8_sub <- check_srtMerge(panc8_sub, batch = "tech")[["srtMerge"]]

pancreas_sub <- RunKNNPredict(srt_query = pancreas_sub, srt_ref = panc8_sub, ref_group = "celltype")
CellDimPlot(pancreas_sub, group.by = "KNNPredict_classification", label = TRUE)
FeatureDimPlot(pancreas_sub, features = "KNNPredict_simil")

pancreas_sub <- RunKNNPredict(
  srt_query = pancreas_sub, srt_ref = panc8_sub,
  ref_group = "celltype", ref_collapsing = FALSE
)
CellDimPlot(pancreas_sub, group.by = "KNNPredict_classification", label = TRUE)
FeatureDimPlot(pancreas_sub, features = "KNNPredict_prob")

pancreas_sub <- RunKNNPredict(
  srt_query = pancreas_sub, srt_ref = panc8_sub,
  query_group = "SubCellType", ref_group = "celltype"
)
CellDimPlot(pancreas_sub, group.by = "KNNPredict_classification", label = TRUE)
FeatureDimPlot(pancreas_sub, features = "KNNPredict_simil")

# Annotate with DE gene instead of HVF
pancreas_sub <- RunKNNPredict(
  srt_query = pancreas_sub, srt_ref = panc8_sub,
  ref_group = "celltype",
  features_type = "DE", feature_source = "ref"
)
CellDimPlot(pancreas_sub, group.by = "KNNPredict_classification", label = TRUE)
FeatureDimPlot(pancreas_sub, features = "KNNPredict_simil")

pancreas_sub <- RunKNNPredict(
  srt_query = pancreas_sub, srt_ref = panc8_sub,
  query_group = "SubCellType", ref_group = "celltype",
  features_type = "DE", feature_source = "both"
)
CellDimPlot(pancreas_sub, group.by = "KNNPredict_classification", label = TRUE)
FeatureDimPlot(pancreas_sub, features = "KNNPredict_simil")

}
