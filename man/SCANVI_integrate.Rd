% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integration-python.R, R/SCP-workflow.R
\name{SCANVI_integrate}
\alias{SCANVI_integrate}
\title{SCANVI Integration}
\usage{
SCANVI_integrate(
  srtMerge = NULL,
  batch = NULL,
  append = TRUE,
  srtList = NULL,
  assay = NULL,
  do_normalization = NULL,
  normalization_method = "LogNormalize",
  do_HVF_finding = TRUE,
  HVF_source = "separate",
  HVF_method = "vst",
  nHVF = 2000,
  HVF_min_intersection = 1,
  HVF = NULL,
  SCANVI_dims_use = NULL,
  labels_key = NULL,
  unlabeled_category = "Unknown",
  nonlinear_reduction = "umap",
  nonlinear_reduction_dims = c(2, 3),
  nonlinear_reduction_params = list(),
  force_nonlinear_reduction = TRUE,
  neighbor_metric = "euclidean",
  neighbor_k = 20L,
  cluster_algorithm = "louvain",
  cluster_resolution = 0.6,
  SCVI_params = list(),
  SCANVI_params = list(),
  num_threads = 8,
  seed = 11
)

SCANVI_integrate(
  srtMerge = NULL,
  batch = NULL,
  append = TRUE,
  srtList = NULL,
  assay = NULL,
  do_normalization = NULL,
  normalization_method = "LogNormalize",
  do_HVF_finding = TRUE,
  HVF_source = "separate",
  HVF_method = "vst",
  nHVF = 2000,
  HVF_min_intersection = 1,
  HVF = NULL,
  SCANVI_dims_use = NULL,
  labels_key = NULL,
  unlabeled_category = "Unknown",
  nonlinear_reduction = "umap",
  nonlinear_reduction_dims = c(2, 3),
  nonlinear_reduction_params = list(),
  force_nonlinear_reduction = TRUE,
  neighbor_metric = "euclidean",
  neighbor_k = 20L,
  cluster_algorithm = "louvain",
  cluster_resolution = 0.6,
  SCVI_params = list(),
  SCANVI_params = list(),
  num_threads = 8,
  seed = 11
)
}
\arguments{
\item{srtMerge}{A merged Seurat object that includes the batch information.}

\item{batch}{A character string specifying the batch variable name.}

\item{append}{Logical, if TRUE, the integrated data will be appended to the original Seurat object (srtMerge).}

\item{srtList}{A list of Seurat objects to be checked and preprocessed.}

\item{assay}{The name of the assay to be used for downstream analysis.}

\item{do_normalization}{A logical value indicating whether data normalization should be performed.}

\item{normalization_method}{The normalization method to be used. Possible values are "LogNormalize", "SCT", and "TFIDF". Default is "LogNormalize".}

\item{do_HVF_finding}{A logical value indicating whether highly variable feature (HVF) finding should be performed. Default is TRUE.}

\item{HVF_source}{The source of highly variable features. Possible values are "global" and "separate". Default is "separate".}

\item{HVF_method}{The method for selecting highly variable features. Default is "vst".}

\item{nHVF}{The number of highly variable features to select. Default is 2000.}

\item{HVF_min_intersection}{The feature needs to be present in batches for a minimum number of times in order to be considered as highly variable. The default value is 1.}

\item{HVF}{A vector of highly variable features. Default is NULL.}

\item{SCANVI_dims_use}{A vector specifying the dimensions returned by scANVI that will be utilized for downstream cell cluster finding and non-linear reduction. If set to NULL, all the returned dimensions will be used by default.}

\item{labels_key}{A character string indicating the column name in the metadata that stores cell labels for semi-supervised training. This argument is required.}

\item{unlabeled_category}{A string specifying the category in \code{labels_key} that represents unlabeled cells. Default is "Unknown".}

\item{nonlinear_reduction}{The nonlinear dimensionality reduction method to use. Options are "umap","umap-naive", "tsne", "dm", "phate", "pacmap", "trimap", "largevis", or "fr" (default is "umap").}

\item{nonlinear_reduction_dims}{The number of dimensions to keep after nonlinear dimensionality reduction. If a vector is provided, different numbers of dimensions can be specified for each method (default is c(2, 3)).}

\item{nonlinear_reduction_params}{A list of parameters to pass to the nonlinear dimensionality reduction method.}

\item{force_nonlinear_reduction}{A logical value indicating whether to force nonlinear dimensionality reduction even if the specified reduction is already present in the Seurat object.}

\item{neighbor_metric}{The distance metric to use for finding neighbors. Options are "euclidean", "cosine", "manhattan", or "hamming" (default is "euclidean").}

\item{neighbor_k}{The number of nearest neighbors to use for finding neighbors (default is 20).}

\item{cluster_algorithm}{The clustering algorithm to use. Options are "louvain", "slm", or "leiden" (default is "louvain").}

\item{cluster_resolution}{The resolution parameter to use for clustering. Larger values result in fewer clusters (default is 0.6).}

\item{SCVI_params}{A list of parameters passed to the \code{SCVI} model used for pretraining, default is an empty list.}

\item{SCANVI_params}{A list of parameters passed to \code{SCANVI\$from_scvi_model}, default is an empty list.}

\item{num_threads}{An integer setting the number of threads for scvi-tools, default is 8.}

\item{seed}{An integer specifying the random seed for reproducibility. Default is 11.}
}
\value{
A Seurat object with SCANVI integration results
}
\description{
Integration using SCANVI (single-cell ANnotation using Variational Inference).
Semi-supervised method that uses cell type labels for improved integration.
Requires Python environment with scvi-tools package.
}
